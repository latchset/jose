.\" generated with Ronn/v0.7.3
.\" http://github.com/rtomayko/ronn/tree/0.7.3
.
.TH "JOSE\-JWK\-PUB" "1" "July 2019" "" ""
.
.SH "NAME"
\fBjose\-jwk\-pub\fR \- Cleans private keys from a JWK
.
.SH "SYNOPSIS"
\fBjose jwk pub\fR \-i JWK [\-o JWK]
.
.SH "OVERVIEW"
The \fBjose jwk pub\fR command removes all private key material from one or more JWK(Set) inputs\. The output will contain only public key material\.
.
.P
If the JWK contains the "key_ops" property, it will be automatically adjusted to include only operations relevant to public keys\.
.
.SH "OPTIONS"
.
.TP
\fB\-i\fR \fIJSON\fR, \fB\-\-input\fR=\fIJSON\fR
Parse JWK(Set) from JSON
.
.TP
\fB\-i\fR \fIFILE\fR, \fB\-\-input\fR=\fIFILE\fR
Read JWK(Set) from FILE
.
.TP
\fB\-i\fR \-, \fB\-\-input\fR=\-
Read JWK(Set) from standard input
.
.TP
\fB\-o\fR \fIFILE\fR, \fB\-\-output\fR=\fIFILE\fR
Write JWK(Set) to FILE
.
.TP
\fB\-o\fR \-, \fB\-\-output\fR=\-
Write JWK(Set) to standard input
.
.TP
\fB\-s\fR, \fB\-\-set\fR
Always output a JWKSet
.
.SH "EXAMPLES"
Clean private key material from a JWK:
.
.IP "" 4
.
.nf

$ jose jwk gen \-i \(cq{"alg":"ES256"}\(cq \-o prv\.jwk
$ cat prv\.jwk
{"alg":"ES256","crv":"P\-256","key_ops":["sign","verify"],"kty":"EC", \.\.\.}
$ jose jwk pub \-i prv\.jwk \-o pub\.jwk
$ cat pub\.jwk
{"alg":"ES256","crv":"P\-256","key_ops":["verify"],"kty":"EC", \.\.\.}
.
.fi
.
.IP "" 0
.
.SH "AUTHOR"
Nathaniel McCallum <npmccallum@redhat\.com>
.
.SH "SEE ALSO"
\fBjose\-alg\fR(1), \fBjose\-jwe\-enc\fR(1), \fBjose\-jwk\-exc\fR(1), \fBjose\-jwk\-gen\fR(1), \fBjose\-jwk\-thp\fR(1), \fBjose\-jwk\-use\fR(1), \fBjose\-jws\-ver\fR(1)
